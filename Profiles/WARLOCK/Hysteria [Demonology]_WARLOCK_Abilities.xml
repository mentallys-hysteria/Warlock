<?xml version="1.0" encoding="utf-8" ?><WARLOCK><Ability><Name>[Misc] Initialization</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks
-------------------------------------------------------------------------------
-- PQInterface is an absolute requirement from now on.
if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_StopRotation()
end

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false

	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Hysteria_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Hysteria_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

-- Cooldown Timer function
if not SCDtimer then SCDtimer = 0 end
if not SCD then SCD = false end
if SCD then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Mode: Manual&amp;quot;, nil, &amp;quot;DC143C&amp;quot;)
else
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Mode: Automatic&amp;quot;, nil, &amp;quot;79BAEC&amp;quot;)
end

if not SCDtimer then SCDtimer = 0 end
if PQI_MentallyDemo_ToggleCooldownMode_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_ToggleCooldownMode_key)
	and GetTime() - SCDtimer &amp;gt; 1
then
	SCDtimer = GetTime()
	if SCD then
		SCD = false
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cff79BAECAutomatic|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		SCD = true
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cffDC143CManual|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

-- PQR variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-- General variables
isAOE = strmatch(PQR_RotationName, &amp;quot;AoE&amp;quot;)
isCleave = strmatch(PQR_RotationName, &amp;quot;Cleave&amp;quot;)

-- Kil&amp;apos;Jaeden&amp;apos;s Cunning makes us cast while moving. :o
local PQ_KC = PQ_KC
if IsPlayerSpell(PQ_KC) then KilJaeden = true
else KilJaeden = false end

-- Unerring Vision of Lei-Shen check.
local itemCheck = itemCheck
local visionTrinket = visionTrinket
if itemCheck(visionTrinket) == 1 then hasVision = true else hasVision = false end

-- Don&amp;apos;t automatically start if we&amp;apos;re mounted.
if IsMounted() then return true end

-- Don&amp;apos;t automatically start if we&amp;apos;re dead or a ghost.
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then return true end

-- Cancel unwanted Soul Fire
local PQ_MCore = PQ_MCore
local PQ_HasHero = PQ_HasHero
local PQ_SoulFire = PQ_SoulFire
if not PQ_HasHero() then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore)
		and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_SoulFire) then SpellStopCasting() end
end

-- Cancel Hellfire if we&amp;apos;re in Single-target Mode
if not isAOE then
	local PQ_Hellfire = PQ_Hellfire
	if IsPlayerSpell(PQ_Hellfire) then
		if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Hellfire) then
			RunMacroText(&amp;quot;/stopcasting&amp;quot;)
		end
	end
end

-- Cancel Harvest Life if we&amp;apos;re in Single-target Mode
if not isAOE then
	local PQ_HL = PQ_HL
	if IsPlayerSpell(PQ_HL) then
		if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Hellfire) then
			RunMacroText(&amp;quot;/stopcasting&amp;quot;)
		end
	end
end

-- Cancel Metamorphosis outside of combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then
	CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
end

-- At this point, everything should have loaded perfectly!
if not PQ_DemoWarlockLoaded then
	local Hysteria = CreateFrame(&amp;quot;Frame&amp;quot;)
	Hysteria:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	Hysteria:SetScript(&amp;quot;OnEvent&amp;quot;, HysteriaFrame_OnEvent)
	Hysteria:Show()
	
	-- Trinket options
	Trinket = 0
	
	-- Tortos: Heroic
	Rockfall = nil
	
	PQ_DemoWarlockLoaded = true
	PQR_WriteToChat(&amp;quot;|cff91e782Hysteria Demonology Warlock data is |cff82cee7Loaded!|cffffffff&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Gul&amp;apos;dan</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_GulDan = PQ_GulDan
local PQ_SFlame = PQ_SFlame
local Shadowflame = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local ShadowflameCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

if isAOE then
	if not PQI_MentallyDemo_AoESelection_enable then return false end
	local v=PQI_MentallyDemo_AoESelection_value or 2
	
	-- We selected Chaos Wave. Opt out.
	if v == 1 then return false end
	
	-- No Chaos Waves please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_GulDan) and PQR_SpellAvailable(PQ_GulDan)
		and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then
		
			-- If Shadowflame is close to coming off CD...
			if ShadowflameCD &amp;lt;= 3 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- Double-stack Shadowflame
			if Shadowflame and Shadowflame - GetTime() &amp;lt;= 4 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- With 2 charges, cast as soon as we can
			if GetSpellCharges(PQ_GulDan) &amp;gt; 1 then
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
	end
else
	-- No Chaos Waves please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_GulDan) and PQR_SpellAvailable(PQ_GulDan)
		and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then
		
			-- If Shadowflame is close to coming off CD...
			if ShadowflameCD &amp;lt;= 3 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- Double-stack Shadowflame
			if Shadowflame and Shadowflame - GetTime() &amp;lt;= 4 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- With 2 charges, cast as soon as we can
			if GetSpellCharges(PQ_GulDan) &amp;gt; 1 then
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on target
if TargetValidation(&amp;quot;target&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;target&amp;quot;) then
	if isAOE then
		if Cor and CorTimer - GetTime() &amp;lt;= 10 then
			CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;)
			return true
		end
	end
	
	if not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local disableDoom = disableDoom
local PQ_SoulFire = PQ_SoulFire
local PQ_TimeLeft = PQ_GetTimeLeft
local PQ_TempBuffs = PQ_CheckTempBuffs
local PQ_TempTable = PQ_TemporaryBuffs
local TargetValidation = TargetValidation
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)
PQ_TempBuffs(PQ_TempTable)

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(PQ_Doom) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	if Doom then
		if not hasVision then
			for i=1,#PQ_TempTable do
				if PQ_TempTable[i].hasBuff then
					if PQ_TempTable[i].spellID == 137590 and doomTimer - GetTime() &amp;lt; 55 then
						CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true
					end
				end
			end
		else
			if UnitBuffID(&amp;quot;player&amp;quot;,138963) and doomTimer - GetTime() &amp;lt; 60 then
				CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true
			end
		end
		
		if doomTimer - GetTime() &amp;lt; 27 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
	else CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local PQ_DSK = PQ_DSK
local PQ_Meta = PQ_Meta
local PQ_Doom = PQ_Doom
local PQ_GulDan = PQ_GulDan
local PQ_SoulFire = PQ_SoulFire
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local DSK,_,_,_,_,_,DSKtime = UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK)
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)
local ShadowflameCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

-- Don&amp;apos;t enter Metamorphosis if we&amp;apos;re not in combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t try to Enter Metamorphosis in Demon Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Don&amp;apos;t enter Metamorphosis when it&amp;apos;s on cooldown
if not PQR_SpellAvailable(PQ_Meta) then return false end

-- Don&amp;apos;t enter Metamorphosis if we have no Fury to spend
if fury &amp;lt; 60 then return false end

-- Don&amp;apos;t enter Metamorphosis if we&amp;apos;re out of range
if UnitExists(&amp;quot;target&amp;quot;) and IsSpellInRange(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;) == 0
	then return false end
	
-- Don&amp;apos;t enter Metamorphosis until after HoG/Corruption
if not isAOE then
	if not Doom and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then return false end
	if not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then return false end
end

-- Legendary Meta Gem and Unerring Vision of Lei-Shen logic
if hasVision then
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
else
	if UnitBuffID(&amp;quot;player&amp;quot;,137590) and fury &amp;gt; 400 then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
end

-- AoE Mode require different rules.
if isAOE then
	-- Enter Metamorphosis to rebuild Corruption
	if Cor and CorTimer - GetTime() &amp;lt;= 10 and fury &amp;gt; 600 then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
	
	if fury &amp;gt;= 900 then
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
else
	-- Weave Metamorphosis with Dark Soul
	if DSK and fury &amp;gt;= (DSKtime - GetTime())*25 then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
	
	-- Weave Metamorphosis with minimum Fury cap
	if fury &amp;gt; 500 then
		if GetSpellCharges(PQ_GulDan) == 0 and ShadowflameCD &amp;gt; 4 then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
			return true
		end
	end
	
	-- Iron Qon and Twin Consorts Deeps logic
	if UnitExists(&amp;quot;mouseover&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16)
		if PQR_SpellAvailable(PQ_Meta) and (npcID == 68078 or npcID == 68904) then
			if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
	
	-- Enter Metamorphosis to rebuild Corruption
	if Cor and CorTimer - GetTime() &amp;lt;= 5 then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
	
	-- Enter Metamorphosis to cast or refresh Doom
	if Doom then
		if doomTimer - GetTime() &amp;lt; 15 then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
			return true
		end
	else
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
	
	-- Force Metamorphosis when Fury is about to be reach the cap
	if fury &amp;gt; 925 then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowbolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ShadowBolt = PQ_ShadowBolt
local TargetValidation = TargetValidation

-- Cancel on Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Cancel on Movement
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_ShadowBolt)
    and PQR_SpellAvailable(PQ_ShadowBolt)
    and GetSpellBookItemName(GetSpellInfo(PQ_ShadowBolt)) == GetSpellInfo(PQ_ShadowBolt)
then
    CastSpellByName(GetSpellInfo(PQ_ShadowBolt),&amp;quot;target&amp;quot;)
    return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Touch of Chaos</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ToC = PQ_ToC

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	CastSpellByName(GetSpellInfo(PQ_ToC),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK
local PQ_MCore = PQ_MCore
local itemCheck = itemCheck
local warlockT15 = warlockT15
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation
local DSK,_,_,_,_,_,DSKtime = UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK)
local DSCD = GetSpellCooldown(PQ_DSK) + select(2,GetSpellCooldown(PQ_DSK)) - GetTime()

-- Metamorphosis is bad
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- So is movement
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

-- Pool Molten Core for Dark Soul
if itemCheck(warlockT15) &amp;gt;= 2 then
	if not PQR_SpellAvailable(PQ_DSK) then
		if DSCD &amp;lt;= 12 then return false end
	else return false end
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and PQR_SpellAvailable(PQ_SoulFire) then
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then
		CastSpellByName(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fel Flame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_KC = PQ_KC
local PQ_FelFlame = PQ_FelFlame
local TargetValidation = TargetValidation

if IsPlayerSpell(PQ_KC) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_FelFlame) and PQR_SpellAvailable(PQ_FelFlame) then
	if PQR_IsMoving(0.3) then CastSpellByName(GetSpellInfo(PQ_FelFlame),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit

-- Disable mouseover dotting if we unticked it.
if not PQI_MentallyDemo_MouseoverDotting_enable then return false end

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on target
if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;mouseover&amp;quot;) then
	if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;mouseover&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local PQ_SoulFire = PQ_SoulFire
local disableDoom = disableDoom
local TargetValidation = TargetValidation

-- Disable mouseover dotting if we unticked it.
if not PQI_MentallyDemo_MouseoverDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason.
if not PQR_SpellAvailable(PQ_Doom) then return false end

if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_SoulFire) then
	if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Life Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_LifeTap = 1454
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Disable inside Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- If we have more than 60% Mana, don&amp;apos;t bother tapping.
if select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 60 then return false end

-- Life Tap!
if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt; 30
    and select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 60
    and PQR_SpellAvailable(PQ_LifeTap)
then CastSpellByName(GetSpellInfo(PQ_LifeTap),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Soulstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Soulstone = PQ_Soulstone

-- Soulstone Settings
if not PQI_MentallyDemo_Soulstone_enable then return false end
local v=PQI_MentallyDemo_Soulstone_value or 2

-- Stop accessing if we&amp;apos;re casting Soulstone already.
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Soulstone) then return false end

-- Soulstone self
if v == 1 then
	if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Soulstone)
		and PQR_SpellAvailable(PQ_Soulstone) then
			CastSpellByName(GetSpellInfo(PQ_Soulstone),&amp;quot;player&amp;quot;) return true
	end
end

-- Set our group orientation
if IsInRaid() then group = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end

-- When we&amp;apos;re in a party/raid with more than 1 member...
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i

		if PQR_SpellAvailable(PQ_Soulstone)
			and UnitIsDeadOrGhost(member)
			and IsSpellInRange(GetSpellInfo(PQ_Soulstone),member) == 1 then
				-- Soulstone any dead person
				if v == 2 then CastSpellByName(GetSpellInfo(PQ_Soulstone),member) return true end
				
				-- Only soulstone Tanks or Healers
				if v == 3 then
					if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
						CastSpellByName(GetSpellInfo(PQ_Soulstone),member) return true
					end
				end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_MentallyDemo_Healthstone_enable then return false end

local v=PQI_MentallyDemo_Healthstone_value

if GetItemCount(5512,false,true) &amp;gt; 0
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetItemCooldown(5512) == 0
then UseItemByName(5512) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dark Regeneration</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DR = PQ_DR
local Hysteria_UnitInfo = Hysteria_UnitInfo
local v=PQI_MentallyDemo_DarkRegeneration_value

-- Disable ability if we disabled it in PQI
if not PQI_MentallyDemo_DarkRegeneration_enable then return false end

if IsPlayerSpell(PQ_DR)
	and PQR_SpellAvailable(PQ_DR)
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
then CastSpellByName(GetSpellInfo(PQ_DR),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Automatic Mortal Coil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MC = PQ_MC
local PQ_SoulFire = PQ_SoulFire
local v=PQI_MentallyDemo_MortalCoil_value
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Disable ability if we disabled it in PQI
if not PQI_MentallyDemo_MortalCoil_enable then return false end

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

if not PQR_SpellAvailable(PQ_MC) then return false end

-- Mortal Coil
if IsPlayerSpell(PQ_MC)
	and TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire)
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
	and not PQI_MentallyDemo_Level30Talent_enable
then CastSpellByName(GetSpellInfo(PQ_MC),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Auto Potion (Heroism)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HasHero = PQ_HasHero
local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Potion during Heroism if user tagged off automatic use
if not PQI_MentallyDemo_AutoPotion_enable then return false end

if GetItemCount(76093,false,true) &amp;gt; 0
	and GetItemCooldown(76093) == 0
	and PQ_HasHero()
	and SpecialUnit()
then UseItemByName(76093) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SCD = SCD
local SpecialUnit = SpecialUnit
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Don&amp;apos;t use Racials if user tagged off automatic use
if not PQI_MentallyDemo_AutoRacials_enable then return false end

-- Don&amp;apos;t use outside of Combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Draenei: Gift of the Naaru
if IsPlayerSpell(59544) and PQR_SpellAvailable(59544) and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 60 then
	CastSpellByName(GetSpellInfo(59544),&amp;quot;player&amp;quot;)
	return true
end

-- Troll: Berserking
if IsPlayerSpell(26297) and not SCD then
	if PQR_SpellAvailable(26297) then
		if not PQI_MentallyDemo_BossCooldown_enable then
			if UnitExists(&amp;quot;target&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end

-- Blood Elf: Arcane Torrent
if IsPlayerSpell(28730) and not SCD then
	if PQR_SpellAvailable(28730) and select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 92
		and UnitExists(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
			return true
	end
end

-- Orc: Blood Fury
if IsPlayerSpell(33702) and not SCD then
	if PQR_SpellAvailable(33702) then
		if not PQI_MentallyDemo_BossCooldown_enable then
			if UnitExists(&amp;quot;target&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dark Soul: Knowledge</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13|/use 14|/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>local PQ_DSK = PQ_DSK

-- Disable ability if we disabled it in PQI
if not PQI_MentallyDemo_DarkSoul_enable then return false end

if IsPlayerSpell(PQ_DSK)
	and PQR_SpellAvailable(PQ_DSK)
	and PQI:IsHotkeys(PQI_MentallyDemo_DarkSoul_key)
	and not GetCurrentKeyBoardFocus()
then
	CastSpellByName(GetSpellInfo(PQ_DSK),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Herbalism: Lifeblood</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit
local PQ_HasHero = PQ_HasHero
local SCD = SCD
-- Herbalism&amp;apos;s Lifeblood
PQ_Lifeblood = {81708,74497,121279,55428,55480,55500,55501,55502,55503}

for i=1,#PQ_Lifeblood do
	if IsPlayerSpell(PQ_Lifeblood[i])
		and PQR_SpellAvailable(PQ_Lifeblood[i])
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and SpecialUnit()
		and not PQ_HasHero()
		and not SCD
	then
		if not PQI_MentallyDemo_BossCooldown_enable then
			CastSpellByName(GetSpellInfo(PQ_Lifeblood[i]),&amp;quot;player&amp;quot;)
			return true
		else
			if SpecialUnit() then
				CastSpellByName(GetSpellInfo(PQ_Lifeblood[i]),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Instanced Combat Detection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyDemo_CombatDetection_enable then return false end

if (not UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;boss1&amp;quot;))
	or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pause Rotation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyDemo_PauseRotation_enable then return false end

if PQI:IsHotkeys(PQI_MentallyDemo_PauseRotation_key)
	and not GetCurrentKeyBoardFocus() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Command Demon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Service = PQ_Service
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Supremacy = PQ_Supremacy

-- we&amp;apos;re using GoSac, do nothing
if IsPlayerSpell(PQ_Sacrifice) then return false end

-- Autocast Pursuit
if not select(2,GetSpellAutocast(30151)) then
	EnableSpellAutocast(GetSpellInfo(30151))
end
-- Autocast Felguard: Legion Strike
if not select(2,GetSpellAutocast(30213)) then
	EnableSpellAutocast(GetSpellInfo(30213))
end
-- Autocast Wrathguard: Mortal Cleave
if not select(2,GetSpellAutocast(115625)) then
	EnableSpellAutocast(GetSpellInfo(115625))
end

-- Disable Threatening Presence when we&amp;apos;re in a instance group/raid
if IsInGroup() or IsInRaid() then
	if select(2,GetSpellAutocast(134477)) then
		DisableSpellAutocast(GetSpellInfo(134477))
	end
end

-- Felstorm
if IsPlayerSpell(PQ_Service) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- Wrathstorm
if IsPlayerSpell(PQ_Supremacy) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		if PQR_SpellAvailable(115831) and IsSpellInRange(GetSpellInfo(115625),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119898),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- We&amp;apos;ve not yet learned any Level 75 talents, fallback.
if UnitLevel(&amp;quot;player&amp;quot;) &amp;gt;= 48 and UnitLevel(&amp;quot;player&amp;quot;) &amp;lt;= 75 then
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitExists(&amp;quot;target&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1 
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Glyph of Imp Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK
local PQ_HasHero = PQ_HasHero

-- PQI Setting toggled off
if not PQI_MentallyDemo_AutoImpSwarm_enable then return false end

-- We&amp;apos;re not Glyphed
if not IsPlayerSpell(56242) then return false end

-- We&amp;apos;re on a Cooldown
if not PQR_SpellAvailable(104316) then return false end

-- No valid unit selected
if not UnitExists(&amp;quot;target&amp;quot;) or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) then return false end

-- Proceed.		
if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then
	if PQ_HasHero() then
		if UnitBuffID(&amp;quot;player&amp;quot;,26297) then
			if UnitBuffID(&amp;quot;player&amp;quot;,137590) or UnitBuffID(&amp;quot;player&amp;quot;,136089) or UnitBuffID(&amp;quot;player&amp;quot;,126659) or UnitBuffID(&amp;quot;player&amp;quot;,138703) then
				CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
			end
			
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
		end
		
		if UnitBuffID(&amp;quot;player&amp;quot;,137590) or UnitBuffID(&amp;quot;player&amp;quot;,136089) or UnitBuffID(&amp;quot;player&amp;quot;,126659) or UnitBuffID(&amp;quot;player&amp;quot;,138703) then
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
		end
		
		CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
	end
	
	if UnitBuffID(&amp;quot;player&amp;quot;,26297) then
		if PQ_HasHero() then
			if UnitBuffID(&amp;quot;player&amp;quot;,137590) or UnitBuffID(&amp;quot;player&amp;quot;,136089) or UnitBuffID(&amp;quot;player&amp;quot;,126659) or UnitBuffID(&amp;quot;player&amp;quot;,138703) then
				CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
			end
			
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
		end
		
		if UnitBuffID(&amp;quot;player&amp;quot;,137590) or UnitBuffID(&amp;quot;player&amp;quot;,136089) or UnitBuffID(&amp;quot;player&amp;quot;,126659) or UnitBuffID(&amp;quot;player&amp;quot;,138703) then
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
		end
		
		CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
	end
	
	if UnitBuffID(&amp;quot;player&amp;quot;,137590) or UnitBuffID(&amp;quot;player&amp;quot;,136089) or UnitBuffID(&amp;quot;player&amp;quot;,126659) or UnitBuffID(&amp;quot;player&amp;quot;,138703) then
		CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
	end
	
	CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Curse of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MP = PQ_MP
local PQ_FB = PQ_FB
local PQ_LB = PQ_LB
local PQ_AOTE = PQ_AOTE
local PQ_COTE = PQ_COTE
local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation

-- Disable when in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Cast when no Magic Vulnerability debuff is active
if TargetValidation(&amp;quot;target&amp;quot;,PQ_COTE) then
	if not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_MP)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_FB)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_LB)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_AOTE)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_COTE)
		and PQR_SpellAvailable(PQ_COTE)
		and SpecialUnit()
	then CastSpellByName(GetSpellInfo(PQ_COTE),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Doomguard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SDM = PQ_SDM
local PQ_STG = PQ_STG
local PQ_Supremacy = PQ_Supremacy

if not PQI_MentallyDemo_Doomguard_enable then return false end

if IsPlayerSpell(PQ_Supremacy) then
	if PQR_SpellAvailable(PQ_STG)
		and PQI:IsHotkeys(PQI_MentallyDemo_Doomguard_key)
		and not GetCurrentKeyBoardFocus()
	then CastSpellByName(GetSpellInfo(PQ_STG),&amp;quot;target&amp;quot;) return true end
else
	if PQR_SpellAvailable(PQ_SDM)
		and PQI:IsHotkeys(PQI_MentallyDemo_Doomguard_key)
		and not GetCurrentKeyBoardFocus()
	then CastSpellByName(GetSpellInfo(PQ_SDM),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Soul Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK
local PQ_MCore = PQ_MCore
local itemCheck = itemCheck
local warlockT15 = warlockT15
local PQ_HasHero = PQ_HasHero
local PQ_SoulFire = PQ_SoulFire
local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

-- Don&amp;apos;t enter while in Caster form.
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- When UVLS procs, don&amp;apos;t cast at all
if UnitBuffID(&amp;quot;player&amp;quot;,138963) then return false end

-- Don&amp;apos;t cast if we&amp;apos;re moving without KJC.
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

-- Don&amp;apos;t cast if it&amp;apos;s not an important unit
if not SpecialUnit() then return false end

-- If we don&amp;apos;t have Molten Core procs, don&amp;apos;t bother....
if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then return false end

-- Don&amp;apos;t continue if Soul Fire isn&amp;apos;t available.
if not PQR_SpellAvailable(PQ_SoulFire) then return false end

-- Don&amp;apos;t cast when Corruption is low
if Cor and CorTimer - GetTime() &amp;lt; 10 then return false end
	
-- Cast during Heroism!
if PQ_HasHero() then
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
		CastSpellByName(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;)
		return true
	end
end

-- Only cast during Dark Soul when we have 2set.
if itemCheck(warlockT15) &amp;gt;= 2 and fury &amp;gt; 250 then
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then
		CastSpellByName(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)

-- Don&amp;apos;t use it in Caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Belt) &amp;gt; 0 then return false end

-- Cast Frag Belt on target during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and GetCurrentKeyBoardFocus() == nil 
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Meta = PQ_Meta
local PQ_Doom = PQ_Doom
local PQ_HasHero = PQ_HasHero
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
local Shadowflame = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local ShadowCount = select(4,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)

-- Don&amp;apos;t try to Exit Metamorphosis in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Legendary Meta Gem and Unerring Vision of Lei-Shen logic
if hasVision then
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) then return false end
	if not PQR_SpellAvailable(PQ_Meta) then return false end
end

-- AoE Mode require different rules.
if isAOE then
	if fury &amp;lt;= 250 then
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
else
	-- Meta Gem
	if UnitBuffID(&amp;quot;player&amp;quot;,137590) and (Doom and doomTimer - GetTime() &amp;lt; 60) then return false end
	
	-- Don&amp;apos;t cancel Metamorphosis with Dark Soul active
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then return false end
	
	-- Don&amp;apos;t Cancel Metamorphosis
	if Shadowflame and ShadowCount &amp;gt; 1 then return false end
	
	-- Don&amp;apos;t cancel Metamorphosis until Doom is on the target
	if not Doom or (Doom and doomTimer - GetTime() &amp;lt; 15) then return false end
	
	-- Corruption refresh logic
	if Cor and CorTimer - GetTime() &amp;lt; 26 then return false end
	
	-- In Cleave mode, let&amp;apos;s stay until shit is refreshed on everyone
	if isCleave then
		local cleaveTargets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}
		for i=1,#cleaveTargets do
			local cleaveCor,_,_,_,_,_,cleaveCorTimer = UnitDebuffID(cleaveTargets[i],PQ_Cor,&amp;quot;PLAYER&amp;quot;)
			
			if cleaveCor and cleaveCorTimer - GetTime() &amp;lt; 25 then return false end
		end
	end
	
	-- Heroism
	if PQ_HasHero() and fury &amp;lt; 100 then
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
	
	-- Cancel Metamorphosis when we&amp;apos;re getting low
	if fury &amp;lt;= 650 then
		CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 30 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MC = PQ_MC
local PQ_SF = PQ_SF
local PQ_HOT = PQ_HOT
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Disabled in PQI
if not PQI_MentallyDemo_Level30Talent_enable then return false end

-- Howl of Terror
if IsPlayerSpell(PQ_HOT)
	and PQR_SpellAvailable(PQ_HOT)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level30Talent_key)
then CastSpellByName(GetSpellInfo(PQ_HOT),nil) return true end

-- Mortal Coil
if IsPlayerSpell(PQ_MC)
	and not PQI_MentallyDemo_MortalCoil_enable
	and PQR_SpellAvailable(PQ_MC)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level30Talent_key)
then CastSpellByName(GetSpellInfo(PQ_MC),&amp;quot;target&amp;quot;) return true end

-- Shadowfury
if IsPlayerSpell(PQ_SF)
	and PQR_SpellAvailable(PQ_SF)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level30Talent_key)
then
	CastSpellByID(PQ_SF)
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 45 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SP = PQ_SP
local PQ_DB = PQ_DB
local PQ_Soul = PQ_Soul

if not PQI_MentallyDemo_Level45Talent_enable then return false end

-- Soul Link
if IsPlayerSpell(PQ_Soul)
	and PQR_SpellAvailable(PQ_Soul)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_Soul),&amp;quot;player&amp;quot;) return true end

-- Sacrificial Pact
if IsPlayerSpell(PQ_SP)
	and PQR_SpellAvailable(PQ_SP)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_SP),&amp;quot;player&amp;quot;) return true end

-- Dark Bargain
if IsPlayerSpell(PQ_DB)
	and PQR_SpellAvailable(PQ_DB)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_DB),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 90 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_AV = PQ_AV
local PQ_KC = PQ_KC
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation

if not PQI_MentallyDemo_Level90Talent_enable then return false end

if not PQR_SpellAvailable(PQ_AV) then return false end

-- Archimonde&amp;apos;s Vengeance
if IsPlayerSpell(PQ_AV)
	and TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level90Talent_key)
then CastSpellByName(GetSpellInfo(PQ_AV),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Automatic Buffing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DI = PQ_DI
local Hysteria_Spells = Hysteria_Spell
local PQ_AuraInfo = PQ_AuraInfo

if IsPlayerSpell(PQ_DI) then
	-- Check for Spellpower Multiplier buffs
	if not PQ_AuraInfo(5,&amp;quot;player&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_DI),&amp;quot;player&amp;quot;) return true
	end
end

if PQI_MentallyDemo_RaidBuffing_enable then
	-- Group setting
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Spellpower Multiplier
		if not PQ_AuraInfo(5,member) and IsSpellInRange(GetSpellInfo(PQ_DI),member) == 1 then
			CastSpellByName(GetSpellInfo(PQ_DI),member) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Management</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Imp = PQ_Imp
local PQ_Succubus = PQ_Succubus
local PQ_Felguard = PQ_Felguard
local PQ_Supremacy = PQ_Supremacy
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Felhunter = PQ_Felhunter
local PQ_Voidwalker = PQ_Voidwalker

if not PQI_MentallyDemo_SummonPet_enable then return false end
local v=PQI_MentallyDemo_SummonPet_value or 5

-- When GoSac is selected, we have nothing here to do.
if IsPlayerSpell(PQ_Sacrifice) then return false end

-- Determine which pet we&amp;apos;re summoning.
if IsPlayerSpell(PQ_Supremacy) then
	if v == 1 then petSummon = 112866
		elseif v == 2 then petSummon = 112867
		elseif v == 3 then petSummon = 112869
		elseif v == 4 then petSummon = 112868
		elseif v == 5 then petSummon = 112870 end
else
	if v == 1 then petSummon = PQ_Imp
		elseif v == 2 then petSummon = PQ_Voidwalker
		elseif v == 3 then petSummon = PQ_Felhunter
		elseif v == 4 then petSummon = PQ_Succubus
		elseif v == 5 then petSummon = PQ_Felguard end
end

-- Try not to spam the ability.
if IsFlying() then return false end
if IsFalling() then return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(petSummon) then
	if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
		SpellStopCasting()
	end
	return false
end
	
-- React to Demonic Rebirth
if UnitBuffID(&amp;quot;player&amp;quot;,108559) then
	CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
end

-- Summon our Selected Pet
if not UnitExists(&amp;quot;pet&amp;quot;) then
	CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local PQ_SoulFire = PQ_SoulFire
local disableDoom = disableDoom
local TargetValidation = TargetValidation

-- Disable mouseover dotting if we unticked it.
if not PQI_MentallyDemo_FocusDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason.
if not PQR_SpellAvailable(PQ_Doom) then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,PQ_SoulFire) then
	if not UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit

-- Disable mouseover dotting if we unticked it.
if not PQI_MentallyDemo_FocusDotting_enable then return false end

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on target
if TargetValidation(&amp;quot;focus&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;focus&amp;quot;) then
	if not UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;focus&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Immolation Aura</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SoulFire = PQ_SoulFire
local PQ_ImmoAura = PQ_ImmoAura
local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if not PQR_SpellAvailable(PQ_ImmoAura) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then
		CastSpellByName(GetSpellInfo(PQ_ImmoAura),&amp;quot;player&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Aura of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_AOTE = PQ_AOTE
local AOTE,_,_,_,_,_,AOTEtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_AOTE,&amp;quot;PLAYER&amp;quot;)

-- Avoid out of combat usage
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t use in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Cast when ready
if PQR_SpellAvailable(PQ_AOTE) then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_AOTE) then CastSpellByName(GetSpellInfo(PQ_AOTE),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Harvest Life</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation

-- Don&amp;apos;t cast in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Not available for some reason
if not PQR_SpellAvailable(PQ_HL) then return false end

-- Movement is bad..
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	CastSpellByName(GetSpellInfo(PQ_HL),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Void Ray</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL
local PQ_Cor = PQ_Cor
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if not PQR_SpellAvailable(115422) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	-- When we don&amp;apos;t use Harvest Life, nuke!
	if not IsPlayerSpell(PQ_HL) then CastSpellByName(GetSpellInfo(115422),&amp;quot;target&amp;quot;) return true end
	
	-- Refresh Corruption when we use Harvest Life
	if Cor then
		if CorTimer - GetTime() &amp;lt; 25 then
			CastSpellByName(GetSpellInfo(115422),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hellfire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Hellfire = PQ_Hellfire
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation

-- Demon Form is bad
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	CastSpellByName(GetSpellInfo(PQ_Hellfire),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local PQ_TimeLeft = PQ_GetTimeLeft
local PQ_TempBuffs = PQ_CheckTempBuffs
local PQ_TempTable = PQ_TemporaryBuffs
local TargetValidation = TargetValidation
	
-- Disable Boss dotting if we&amp;apos;ve unchecked it in the config.
if not PQI_MentallyDemo_AutoBossDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Keep DoTs on bosses when in range
for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(bossUnit,PQ_Doom,&amp;quot;PLAYER&amp;quot;)
	PQ_TempBuffs(PQ_TempTable)
	
	-- Some bosses have immunities, these are bad
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250)
		then return false end
	
	if TargetValidation(bossUnit,PQ_SoulFire) and not disableDoom(bossUnit) then
		if Doom then
			if not hasVision then
				for i=1,#PQ_TempTable do
					if PQ_TempTable[i].hasBuff then
						if PQ_TempTable[i].spellID == 137590 and doomTimer - GetTime() &amp;lt; 60 then
							CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true
						end
					end
				end
			else
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) and doomTimer - GetTime() &amp;lt; 60 then
					CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true
				end
			end
			
			if doomTimer - GetTime() &amp;lt; 27 then CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
		else CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local TargetValidation = TargetValidation

-- Disable Boss dotting if we&amp;apos;ve unchecked it in the config.
if not PQI_MentallyDemo_AutoBossDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in Demon form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Keep DoTs on bosses when in range
for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	
	-- Some bosses have immunities, these are bad
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250)
		then return false end
	
	if TargetValidation(bossUnit,PQ_Cor) then
		if not UnitDebuffID(bossUnit,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then
			CastSpellByName(GetSpellInfo(PQ_Cor),bossUnit)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Grimoire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SCD = SCD
local PQ_Imp = PQ_Imp
local PQ_GImp = PQ_GImp
local SpecialUnit = SpecialUnit
local PQ_SoulFire = PQ_SoulFire
local PQ_Succubus = PQ_Succubus
local PQ_Felguard = PQ_Felguard
local PQ_Supremacy = PQ_Supremacy
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Felhunter = PQ_Felhunter
local PQ_GSuccubus = PQ_GSuccubus
local PQ_GFelguard = PQ_GFelguard
local PQ_Voidwalker = PQ_Voidwalker
local PQ_GFelhunter = PQ_GFelhunter
local PQ_GVoidwalker = PQ_GVoidwalker
local TargetValidation = TargetValidation

if not PQI_MentallyDemo_GrimoirePet_enable then return false end
local v=PQI_MentallyDemo_GrimoirePet_value or 5

-- When GoSac is selected, we have nothing here to do.
if IsPlayerSpell(PQ_Supremacy) then return false end

-- Determine which pet we&amp;apos;re summoning.
if IsPlayerSpell(PQ_Service) then
	if v == 1 then petSummon = PQ_GImp
		elseif v == 2 then petSummon = PQ_GVoidwalker
		elseif v == 3 then petSummon = PQ_GFelhunter
		elseif v == 4 then petSummon = PQ_GSuccubus
		elseif v == 5 then petSummon = PQ_GFelguard end
else
	if v == 1 then petSummon = PQ_Imp
		elseif v == 2 then petSummon = PQ_Voidwalker
		elseif v == 3 then petSummon = PQ_Felhunter
		elseif v == 4 then petSummon = PQ_Succubus
		elseif v == 5 then petSummon = PQ_Felguard end
end
	
-- Try not to spam the ability.
if IsFlying() then return false end
if IsFalling() then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Sacrifice) then
	if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(petSummon) then
		if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
			SpellStopCasting()
		end
		return false
	end
end

-- Grimoire of Sacrifice
if IsPlayerSpell(PQ_Sacrifice) then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Sacrifice) then
		if not UnitExists(&amp;quot;pet&amp;quot;) then
			CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
		else
			CastSpellByName(GetSpellInfo(PQ_Sacrifice),&amp;quot;player&amp;quot;) return true
		end
	end
end

-- Grimoire of Service
if IsPlayerSpell(PQ_Service) then
	if SCD then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and PQR_SpellAvailable(petSummon) then
		if PQI_MentallyDemo_BossCooldown_enable then
			if SpecialUnit() then CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true end
		else
			CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Chaos Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyDemo_AoESelection_enable then return false end

local PQ_SoulFire = PQ_SoulFire
local PQ_GulDan = PQ_GulDan
local PQ_ChaosWave = PQ_ChaosWave
local v=PQI_MentallyDemo_AoESelection_value or 2

-- PQInterface Settings.
if v == 2 then return false end

-- Disable outside of AoE Mode.
if not isAOE then return false end

-- No Hand of Gul&amp;apos;dan please!
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and PQR_SpellAvailable(PQ_ChaosWave)
	and GetSpellCharges(PQ_ChaosWave) &amp;gt; 0 then
		CastSpellByName(GetSpellInfo(PQ_ChaosWave),&amp;quot;target&amp;quot;)
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Carrion Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Swarm = PQ_Swarm
local PQ_SoulFire = PQ_SoulFire
local pom = PQR_UnitInfo(&amp;quot;Player&amp;quot;)

-- Disabled in PQI, don&amp;apos;t use
if not PQI_MentallyDemo_AutoCarrionSwarm_enable then return false end

-- Can only be used during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Disable while on cooldown
if not PQR_SpellAvailable(PQ_Swarm) then return false end

if TargetValidation(&amp;quot;target&amp;quot;, PQ_SoulFire) then
	-- Make sure we&amp;apos;re in melee range of the unit
	if not CheckInteractDistance(&amp;quot;target&amp;quot;,1) then return false end
	
	-- Make sure we&amp;apos;re facing the unit
	if not PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then return false end
	
	CastSpellByName(GetSpellInfo(PQ_Swarm),nil) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Synapse Springs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation
local Gloves = GetInventoryItemID(&amp;quot;player&amp;quot;, 10)
local DSCD = GetSpellCooldown(PQ_DSK) + select(2,GetSpellCooldown(PQ_DSK)) - GetTime()

-- Don&amp;apos;t use outside of Combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Gloves) &amp;gt; 0 then return false end

-- Don&amp;apos;t use if Dark Soul is ready!
if PQR_SpellAvailable(PQ_DSK) or DSCD &amp;lt; 30 then return false end

-- Cast Engineering Gloves
if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then UseItemByName(Gloves) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Touch of Chaos (Cleave)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ToC = PQ_ToC
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if isCleave then
	local cleaveTargets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}
	for i=1,#cleaveTargets do
		local cleaveCor,_,_,_,_,_,cleaveCorTimer = UnitDebuffID(cleaveTargets[i],PQ_Cor,&amp;quot;PLAYER&amp;quot;)
		
		if TargetValidation(cleaveTargets[i],PQ_SoulFire) then
			if cleaveCor then
				if cleaveCorTimer - GetTime() &amp;lt; 25 then
					CastSpellByName(GetSpellInfo(PQ_ToC),cleaveTargets[i]) return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARLOCK>